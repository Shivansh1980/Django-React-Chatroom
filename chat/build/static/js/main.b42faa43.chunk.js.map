{"version":3,"sources":["HelperClasses/Icons.jsx","HelperClasses/ChatMessage.jsx","components/CustomBox.jsx","HelperClasses/AlterCSS.jsx","components/QuestionBox.jsx","HelperClasses/MessageApi.jsx","components/AnswerBox.jsx","components/Menu.jsx","components/Home.jsx","components/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["library","add","faGoogle","faArrowDown","google_icon","icon","prefix","iconName","html","appendMessageLeft","selector","message","username","parentElement","document","querySelector","div","createElement","setAttribute","h","innerHTML","$","append","child","innerText","appendChild","appendMessageRight","copyToClipboard","element","$temp","val","text","select","execCommand","CustomBox","props","boxName","layout","this","className","id","name","type","htmlFor","placeholder","cols","value","onClick","e","handler","align","progress","style","width","Component","hide_image_to_text_box","css","QuestionBox","client","message_api","get_client","get_username","roomname","get_roomname","state","connected","inputquestion","file","formData","onDrop","acceptedFiles","console","log","setState","load_messages","sendMessage","bind","handle_upload_image","handle_clear_room_messages","handle_update_progress","new_progress","event","send_message_to_room","preventDefault","password","prompt","clear_room_messages","data","to_text","upload","is","alert","description","send_file_to_group","update_progress","send_image_text","Notification","permission","requestPermission","Push","Permission","get","classname","laoding_box","i","span","initializeLoadingScreen","onopen","send","JSON","stringify","removeEventListener","addEventListener","clipboardData","setData","remove","accept","getRootProps","getInputProps","isDragActive","isDragReject","onChange","target","onmessage","parse","fadeOut","messages","length","loadAllMessages","message_content","hasFocus","notification","body","onclick","close","window","parent","focus","showNotification","updated_message","contents","getElementsByTagName","answer","content","String","trim","p","backgroundColor","appendAnswer","empty","src","img","getElementById","unbind","confirm","current_message","search","open","addEvents","MessageWebApi","hostname","location","host","ws_protocol","protocol","api_url","axios","then","response","catch","error","callback","reader","FileReader","onload","dataURL","result","readAsDataURL","toDataURL","image","output","Tesseract","ref","recognize","packet","Math","round","command","cookieValue","cookie","cookies","split","substring","decodeURIComponent","map","push","answered_messages","isanswer","AnswerBox","isLoggedIn","isNewAnswer","get_answered_messages","Home","WebSocket","questions_layout","answer_layout","set_username","set_roomname","question_layout_handler","answer_layout_handler","answers_layout","Login","handleRoomName","handleUsername","handleSubmit","searchInput","onSubmit","inputEl","React","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b42faa43.chunk.js","sourcesContent":["import { library, icon } from '@fortawesome/fontawesome-svg-core';\r\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons'\r\nlibrary.add(\r\n    faGoogle,\r\n    faArrowDown\r\n);\r\n\r\nexport const google_icon = icon({ prefix: 'fab', iconName: 'google' }).html;\r\n// export const arrow_down_icon = icon({ prefix: 'fas', iconName: 'faArrowDown' }).html;\r\n","import $ from 'jquery'\r\nimport Push from 'push.js'\r\nimport { google_icon} from '../HelperClasses/Icons'\r\n\r\nexport function initializeLoadingScreen(classname) {\r\n    var laoding_box = $(\".\" + classname);\r\n    for (var i = 1; i <= 20; i++){\r\n        var span = document.createElement('span');\r\n        span.setAttribute(\"style\", `--i:${i};`)\r\n        laoding_box.append(span);\r\n    }\r\n}\r\nexport function appendAnswer(updated_message) {\r\n    if (!updated_message['error']) {\r\n        var message_box = document.querySelector('#questions_box');\r\n        let contents = message_box.getElementsByTagName('p');\r\n        var answer = updated_message['answer'];\r\n        var username = updated_message['username'];\r\n\r\n        for (let content of contents) {\r\n            var message = String(content.innerText).trim();\r\n            if (message === String(updated_message['message']).trim()) {\r\n                var p = document.createElement('p');\r\n                p.setAttribute('class', 'answer');\r\n                p.innerHTML = '<span id=\"answered\">' + username + ' : ' + answer + '</span>';\r\n                content.appendChild(p);\r\n                content.style.backgroundColor = 'cyan';\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        alert('Message Not Found');\r\n    }\r\n}\r\nexport function addEvents(client, username, roomname) {\r\n    $('.right_message').unbind(\"contextmenu\").bind(\"contextmenu\", function (e) {\r\n        copyToClipboard(this);\r\n        window.confirm(\"Copied Successfully\")\r\n        return false;\r\n    })\r\n    $('.left_message').unbind(\"contextmenu\").bind(\"contextmenu\", function (e) {\r\n        copyToClipboard(this);\r\n        window.confirm(\"Copied Successfully\")\r\n        return false;\r\n    })\r\n    $('.right_message').unbind(\"click\").bind(\"click\", function () {\r\n        var answer = prompt('Enter Answer : ');\r\n        if (answer === null || answer === \"\") {\r\n            return;\r\n        }\r\n        else {\r\n            var current_message = this.innerText;\r\n\r\n            var p = document.createElement('p');\r\n            p.setAttribute('class', username + '_answer');\r\n            p.innerHTML = '<span id=\"answered\">' + username + ' : ' + answer + '</span>';\r\n            this.appendChild(p);\r\n\r\n            var updated_message = this.innerText;\r\n\r\n            p.innerText = \"\";\r\n            p.remove();\r\n\r\n            client.send(JSON.stringify({\r\n                'command': 'update_message',\r\n                'message': current_message,\r\n                'updated_message': updated_message,\r\n                'answer': answer,\r\n                'username': username,\r\n                'roomname':roomname\r\n            }));\r\n        }\r\n        \r\n    })\r\n    $(\".left_message\").unbind(\"click\").bind(\"click\", function (e) {\r\n        var answer = prompt('Enter Answer : ');\r\n        if (answer === null || answer === \"\") {\r\n            return;\r\n        }\r\n\r\n        var current_message = this.innerText;\r\n\r\n\r\n        var p = document.createElement('p');\r\n        p.setAttribute('class', username + ' answer');\r\n        p.innerHTML = '<span id=\"answered\">' + username + ' : ' + answer + '</span>';\r\n\r\n        this.appendChild(p);\r\n\r\n        var updated_message = this.innerText;\r\n        p.innerText = \"\";\r\n        p.remove();\r\n\r\n        client.send(JSON.stringify({\r\n            'command': 'update_message',\r\n            'message': current_message,\r\n            'updated_message': updated_message,\r\n            'answer': answer,\r\n            'username': username,\r\n            'roomname':roomname\r\n        }));\r\n    })\r\n    $('.google_search_button').unbind(\"click\").bind(\"click\", function (e) {\r\n        var text = e.target.value\r\n        var search = \"http://www.google.com/search?q=\" + text;\r\n        window.open(search, \"_blank\");\r\n    })\r\n}\r\n\r\nexport function appendMessageLeft(selector, message, username) {\r\n    var parentElement = document.querySelector(\"#\" + selector);\r\n    var div = document.createElement('div');\r\n    div.setAttribute('class', 'left_message_container');\r\n    \r\n    //adding username button\r\n    var h = document.createElement('h4');\r\n    h.setAttribute('class', 'message_username');\r\n    h.setAttribute('align', 'center');\r\n    h.innerHTML = '<span id=\"username\">' + username + '</span>';\r\n    $(div).append(h);\r\n\r\n    //adding google search button\r\n    $(div).append(`<button id=\"google_search_button\" class=\"google_search_button\" value='${message}'\">${google_icon} Search on Google</button>`);\r\n\r\n    //adding message\r\n    var child = document.createElement('p');\r\n    child.setAttribute('class', 'left_message');\r\n    child.innerText = message;\r\n    $(div).append(child);\r\n\r\n    parentElement.appendChild(div);\r\n}\r\n\r\n\r\nexport function appendMessageRight(selector, message, username) {\r\n    var parentElement = document.querySelector(\"#\"+selector);\r\n\r\n    var div = document.createElement('div');\r\n    div.setAttribute('class', 'right_message_container');\r\n\r\n    //adding username header\r\n    var h = document.createElement('h4');\r\n    h.setAttribute('class', 'message_username');\r\n    h.setAttribute('align', 'center');\r\n    h.innerHTML = '<span id=\"username\">' + username + '</span>';\r\n    $(div).append(h);\r\n\r\n    //adding google search button\r\n    $(div).append(`<button id=\"google_search_button\" class=\"google_search_button\" value='${message}'\">${google_icon} Search on Google</button>`);\r\n\r\n    //adding message\r\n    var child = document.createElement('p');\r\n    child.setAttribute('class', 'right_message');\r\n    child.innerText = message;\r\n    $(div).append(child);\r\n\r\n    parentElement.appendChild(div);\r\n}\r\n\r\nexport function loadAllMessages(selector, messages, username, roomname) {\r\n    for (var i = 0; i < messages.length; i++) {\r\n        var message = messages[i];\r\n        if (roomname === message['roomname']) {\r\n            if (message['username'] === username) {\r\n                appendMessageRight(selector, message['message'], message['username']);\r\n            }\r\n            else {\r\n                appendMessageLeft(selector, message['message'], message['username']);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function fetchMessages(client, username, roomname) {\r\n    client.send(JSON.stringify({\r\n        'command': 'fetch_messages',\r\n        'username': username,\r\n        'roomname':roomname\r\n    }));\r\n}\r\n\r\nexport function copyToClipboard(element) {\r\n    var $temp = $(\"<p id='copy_it'>\");\r\n    $(\"body\").append($temp);\r\n    $temp.val($(element).text()).select();\r\n    document.execCommand(\"copy\");\r\n}\r\n\r\nexport function take_notification_permissions() {\r\n    if (!Notification) {\r\n        alert('Desktop Notification not available in your browser');\r\n        return;\r\n    }\r\n    if (Notification.permission != 'granted') {\r\n        Notification.requestPermission();\r\n        Push.Permission.get();\r\n    }\r\n}\r\n\r\nexport function showNotification(username, roomname, message) {\r\n    if (Notification.permission != 'granted')\r\n        Notification.requestPermission();\r\n    else {\r\n        var notification = new Notification(`Awesome Chatroom:\\n${roomname}<--${username}`, {\r\n            body: message,\r\n            icon: 'https://i.pinimg.com/originals/87/68/a6/8768a6b1df27243034f123988cfdb9d1.jpg'\r\n        });\r\n        \r\n        notification.onclick = () => {\r\n            notification.close();\r\n            window.parent.focus();\r\n        }\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport $ from 'jquery'\r\n\r\nexport class CustomBox extends Component {\r\n    boxName = this.props.boxName;\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let layout;\r\n        if (this.boxName == \"image_to_text_box\")\r\n            layout =\r\n                <div className=\"image_to_text_box\">\r\n                <form id=\"image_to_text_form\">\r\n                    <div>\r\n                        <input className=\"image_to_text_inputs\" id=\"convert_to_text\" name=\"convert_to_text\" type=\"checkbox\"/>\r\n                        <label htmlFor=\"convert_to_text\">Convert To Text</label>\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"image_to_text_inputs\" id=\"direct_upload\" name=\"direct_upload\" type=\"checkbox\" />\r\n                        <label htmlFor=\"upload_direct\">Direct Upload</label>\r\n                    </div>\r\n                    <div>\r\n                        <p>Image Description</p>\r\n                        <textarea name=\"image_description\" id=\"image_description\" placeholder=\"Enter Image Description here\" cols=\"50\"></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            id=\"upload_button\"\r\n                            className=\"image_to_text_button\"\r\n                            type=\"submit\"\r\n                            value=\"upload\"\r\n                            onClick={(e) => this.props.handler(e, { \"button\": \"upload\" })}\r\n                        >Upload</button>\r\n                        <button\r\n                            id=\"cancel_button\"\r\n                            className=\"image_to_text_button\"\r\n                            type=\"submit\"\r\n                            value=\"cancel\" \r\n                            onClick={(e) => this.props.handler(e, { \"button\": \"cancel\" })}\r\n                        >Cancel</button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n        else if (this.boxName == 'progress_box')\r\n            layout =\r\n                <div className=\"progress_box\">\r\n                    <h2 id=\"progress_box_heading\" align=\"center\">Converting Image To Text ({this.props.progress+'%'})</h2>\r\n                    <div className=\"progress_line\" style={{width:this.props.progress+'%'}}></div>\r\n                </div>\r\n        \r\n        return (\r\n            <div className=\"custom_box\">\r\n                {layout}             \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomBox\r\n","import $ from 'jquery'\r\nexport function show_image_to_text_box() {\r\n    $(\".image_to_text_box\").css({\r\n        'visibility':'visible'\r\n    })\r\n}\r\n\r\nexport function display_questions_box_items_at_start() {\r\n    $(\"#questions_box\").css({\r\n        'align-items': 'initial',\r\n        'justify-content':'initial'\r\n    })\r\n}\r\n\r\nexport function hide_image_to_text_box() {\r\n    $(\".image_to_text_box\").css({\r\n        'visibility': 'hidden'\r\n    })\r\n}\r\n\r\nexport function show_loading_screen() {\r\n    $(\".loading\").css({\r\n        'visibility': 'visible'\r\n    })\r\n}\r\n\r\nexport function hide_loading_screen() {\r\n    $(\".loading\").fadeOut('fast');\r\n}\r\n\r\nexport function show_progress_box() {\r\n    $('.progress_box').css({\r\n        'visibility':'visible'\r\n    })\r\n}\r\n\r\nexport function hide_progress_box() {\r\n    $('.progress_box').css({\r\n        'visibility': 'hidden'\r\n    })\r\n}","import React, { Component } from 'react'\r\nimport { appendMessageLeft, appendMessageRight, loadAllMessages, fetchMessages, take_notification_permissions, showNotification} from '../HelperClasses/ChatMessage'\r\nimport { addEvents, appendAnswer, initializeLoadingScreen } from '../HelperClasses/ChatMessage';\r\nimport $, { Callbacks } from 'jquery'\r\nimport Dropzone from 'react-dropzone'\r\nimport './CustomBox'\r\nimport CustomBox from './CustomBox';\r\nimport {\r\n    show_image_to_text_box,\r\n    hide_image_to_text_box,\r\n    hide_loading_screen,\r\n    show_loading_screen,\r\n    display_questions_box_items_at_start,\r\n    show_progress_box,\r\n    hide_progress_box\r\n} from '../HelperClasses/AlterCSS'\r\n\r\nexport class QuestionBox extends Component {\r\n    \r\n    client = this.props.message_api.get_client();\r\n    username = this.props.message_api.get_username();\r\n    roomname = this.props.message_api.get_roomname();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.message_api = this.props.message_api;\r\n        this.message_api.load_messages();\r\n\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.handle_upload_image = this.handle_upload_image.bind(this);\r\n        this.handle_clear_room_messages = this.handle_clear_room_messages.bind(this);\r\n        this.handle_update_progress = this.handle_update_progress.bind(this);\r\n    }\r\n\r\n    state = {\r\n        connected: '',\r\n        inputquestion: '',\r\n        file: null,\r\n        formData: null,\r\n        progress:0.01\r\n    }\r\n\r\n    handle_update_progress(new_progress) {\r\n        this.setState({\r\n            progress:new_progress\r\n        })\r\n    }\r\n    \r\n    sendMessage(event) {\r\n        this.message_api.send_message_to_room('new_message', this.state.inputquestion);\r\n        this.setState({\r\n            inputquestion: '',\r\n        })\r\n        event.preventDefault();\r\n        \r\n    }\r\n    handle_clear_room_messages(event) {\r\n        var password = prompt('Enter Password : ');\r\n        this.message_api.clear_room_messages(password);\r\n    }\r\n    handle_upload_image(event, data) {\r\n        var to_text = false;\r\n        var upload = false;\r\n        if ($(\"#convert_to_text\").is(\":checked\"))\r\n            to_text = true;\r\n        if ($(\"#direct_upload\").is(\":checked\")) {\r\n            upload = true;\r\n        }\r\n        if (data[\"button\"] == \"upload\") {\r\n            if (to_text && upload)\r\n                alert(\"You can't tick both\");\r\n            else if (!to_text && !upload) {\r\n                alert(\"Please Select Atleast One or Cancel\");\r\n            }\r\n            else if (upload && !to_text) {\r\n                var description = $('#image_description').val();\r\n                if (description == \"\" || description == null) description = \"\";\r\n                this.message_api.send_file_to_group(this.state.file, description);\r\n                hide_image_to_text_box();\r\n            }\r\n            else {\r\n                hide_image_to_text_box();\r\n                show_progress_box();\r\n                var update_progress = this.handle_update_progress;\r\n                this.message_api.send_image_text(this.state.file[0], function (progress) {\r\n                    update_progress(progress)\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            hide_image_to_text_box();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    onDrop = (acceptedFiles) => {\r\n        console.log(acceptedFiles);\r\n        this.setState({\r\n            file:acceptedFiles\r\n        })\r\n        show_image_to_text_box();\r\n    }\r\n\r\n    componentDidMount() {\r\n        take_notification_permissions();\r\n\r\n        //show loading screen\r\n        initializeLoadingScreen(\"loading\");\r\n        show_loading_screen();\r\n\r\n        this.client.onopen = () => {\r\n            this.setState({\r\n                connected:'Welcome, You are Connected With '+this.roomname\r\n            })\r\n            console.log(\"connected to websocket\");\r\n            \r\n            fetchMessages(this.client, this.username, this.roomname);\r\n\r\n            document.removeEventListener('copy', function () {\r\n                return;\r\n            })\r\n            document.addEventListener('copy', function (e) {\r\n                var text = $('#copy_it').val();\r\n                console.log(text);\r\n                if(e.clipboardData == null || text == null || e == null) return\r\n                e.clipboardData.setData('text/plain', text);\r\n                e.preventDefault();\r\n                $('#copy_it').remove();\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"QuestionsBox\">\r\n                <CustomBox boxName=\"image_to_text_box\" handler={this.handle_upload_image} />\r\n                <CustomBox boxName=\"progress_box\" progress={ this.state.progress}/>\r\n                <div className=\"question_box_header\">\r\n                    <Dropzone\r\n                        onDrop={this.onDrop}\r\n                        accept=\"image/*\"\r\n                    >\r\n                        {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\r\n\r\n                            <div {...getRootProps({ className: \"dropzone\", id: \"dropzone\" })}>\r\n                                <input {...getInputProps()} />\r\n                                {!isDragActive && 'Click here or drop a file to upload!'}\r\n                                {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\r\n                                {isDragReject && \"File type not accepted, sorry!\"}\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    <button id=\"clear_message_button\" onClick={ this.handle_clear_room_messages}>Clear All Messages</button>\r\n                </div>\r\n                <div id=\"questions_box\" className=\"questions_box\"><div className=\"loading\"></div> </div>\r\n                <div className=\"question_input_container\">\r\n                    <textarea id=\"input_question\"\r\n                        type=\"text\"\r\n                        onChange={(event) => {\r\n                            this.setState({ inputquestion: event.target.value })\r\n                        }}\r\n                        value={this.state.inputquestion}\r\n                        placeholder=\"Enter Your Question here\"\r\n                    />\r\n                    <input\r\n                        id=\"post_question_button\"\r\n                        type=\"submit\"\r\n                        onClick={this.sendMessage}\r\n                        value=\"POST\" />\r\n                </div>\r\n                    {\r\n                        this.client.onmessage = (e) => {\r\n                            const data = JSON.parse(e.data);\r\n                            //when you fetch all messages\r\n                        if (data['type'] === 'messages') {\r\n                                hide_loading_screen();\r\n                            loadAllMessages(\"questions_box\", data['messages'], this.username, this.roomname);\r\n                            display_questions_box_items_at_start();\r\n                            }\r\n                            // when new message arrived\r\n                            else if (data['type'] === 'message') {\r\n                                var message_content = data.message;\r\n                                var username = message_content.username;\r\n                                var roomname = message_content.roomname;\r\n\r\n                                if (!document.hasFocus()) {\r\n                                    showNotification(username, roomname, message_content['message']);\r\n                                }\r\n\r\n                                if (username === this.username) {\r\n                                    appendMessageRight(\"questions_box\",message_content['message'], username);\r\n                                }\r\n                                else {\r\n                                    appendMessageLeft(\"questions_box\",message_content['message'], username);\r\n                                }\r\n                            }\r\n                            else if (data['type'] === 'exists' && data.message.username === this.username) {\r\n                                alert(\"This Question Already Exists You Can't Upload Same Again\");\r\n                            }\r\n                            else if (data['type'] === 'updated_message') {\r\n                                var updated_message = data['message'];\r\n                                appendAnswer(updated_message);\r\n                            }\r\n                            \r\n                            else if (data['type'] == 'clear_room_message') {\r\n                                if (data['message']['status'] == 'true'){\r\n                                    $('#questions_box').empty();\r\n                                }\r\n                                else if(data['message']['status'] == 'false')\r\n                                    alert(data['message']['message']);\r\n                            }\r\n                            else if (data['type'] == 'new_file') {\r\n                                var src = data['message']['dataURL'];\r\n                                var img = document.createElement('img');\r\n                                img.src = src;\r\n                                img.className = 'image_file'\r\n                                var box = document.getElementById('questions_box');\r\n                                box.appendChild(img);\r\n                            }\r\n                            addEvents(this.client, this.username, this.roomname);\r\n                        }\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuestionBox","import axios from \"axios\";\r\nimport { hide_progress_box } from \"./AlterCSS\";\r\n\r\nfunction toDataURL(file, callback) {\r\n    var reader = new FileReader();\r\n    reader.onload = function () {\r\n        var dataURL = reader.result;\r\n        callback(dataURL);\r\n    }\r\n    reader.readAsDataURL(file[0]);\r\n}\r\nfunction dataUrlToFile(dataurl, filename) {\r\n    var arr = dataurl.split(',');\r\n    var mime = arr[0].match(/:(.*?);/)[1];\r\n    var bstr = atob(arr[1]);\r\n    var n = bstr.length;\r\n    var u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, { type: mime });\r\n}\r\n\r\nexport class MessageWebApi{\r\n    hostname = window.location.host;\r\n    ws_protocol = window.location.protocol == \"https:\" ? \"wss\" : \"ws\";\r\n    // hostname = '127.0.0.1:8000'\r\n\r\n    constructor(client) {\r\n        this.api_url = window.location.protocol + '//' + this.hostname+'/';\r\n        this.messages = [];\r\n        this.client = client;\r\n        this.username = null\r\n        this.roomname = null\r\n    }\r\n\r\n    load_messages() {\r\n        axios.get(this.api_url + \"api/messageapi/\")\r\n            .then((response) => {\r\n                var data = response.data;\r\n                this.messages = data;\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    send_file_to_group(file, description) {\r\n        const client = this.client;\r\n        var username = this.username\r\n        var roomname = this.roomname\r\n        toDataURL(file, function (dataURL) {\r\n            client.send(JSON.stringify({\r\n                'command': 'new_file',\r\n                'dataURL': dataURL,\r\n                'description':description,\r\n                'username': username,\r\n                'roomname': roomname\r\n            }));\r\n        })\r\n    }\r\n\r\n    // async send_image_text_using_python(event, image) {\r\n    //     event.preventDefault();\r\n    //     const formData = new FormData();\r\n    //     formData.append('username', this.username);\r\n    //     formData.append('roomname', this.roomname);\r\n    //     formData.append('image', image[0]);\r\n\r\n    //     axios(this.api_url+'convert_image_to_text/', {\r\n    //         method: 'POST',\r\n    //         data: formData,\r\n    //         headers: {\r\n    //             \"X-CSRFToken\": this.get_token(),\r\n    //             \"csrfmiddlewaretoken\": this.get_token()\r\n    //         }\r\n    //     }).then(response => {\r\n    //         if (response.data.status == 'error')\r\n    //             alert('File Not Found');\r\n    //         else\r\n    //             this.send_message_to_room('new_message', response.data.text);\r\n    //     }).catch(error => {\r\n    //         alert(error);\r\n    //     })\r\n    // }\r\n\r\n    send_image_text(image, callback, output) {\r\n        var Tesseract = window.Tesseract;\r\n        var ref = this;\r\n        Tesseract.recognize(image)\r\n            .progress(function (packet) {\r\n                callback(Math.round(packet.progress*100))\r\n            })\r\n            .then(function (result) {\r\n                hide_progress_box();\r\n                ref.send_message_to_room(\"new_message\", result.text);\r\n            });\r\n    }\r\n\r\n    send_message_to_room(command, message) {\r\n        this.client.send(JSON.stringify({\r\n            'command': command,\r\n            'message': message,\r\n            'username': this.username,\r\n            'roomname': this.roomname\r\n        }));\r\n    }\r\n\r\n    clear_room_messages(password) {\r\n        this.client.send(JSON.stringify({\r\n            'command': 'clear_room_messages',\r\n            'username': this.username,\r\n            'roomname': this.roomname,\r\n            'password': password\r\n        }));\r\n    }\r\n\r\n    get_token() {\r\n        let cookieValue = null,\r\n            name = \"csrftoken\";\r\n        if (document.cookie && document.cookie !== \"\") {\r\n            let cookies = document.cookie.split(\";\");\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) == (name + \"=\")) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    get_client() {\r\n        return this.client;\r\n    }\r\n    get_messages() {\r\n        return this.messages;\r\n    }\r\n\r\n    get_response() {\r\n        return this.response;\r\n    }\r\n\r\n    get_room_messages(roomname) {\r\n        var messages = [];\r\n        this.messages.map(message => {\r\n            if(message.roomname === roomname)\r\n                messages.push(message);\r\n        })\r\n        return messages;\r\n    }\r\n\r\n    get_answered_messages() {\r\n        var answered_messages = []\r\n        this.messages.map(message => {\r\n            if (message.isanswer === true)\r\n                answered_messages.push(message);\r\n                \r\n        })\r\n        return answered_messages;\r\n    }\r\n\r\n    set_roomname(roomname) {\r\n        this.roomname = roomname;\r\n    }\r\n\r\n    get_roomname() {\r\n        return this.roomname;\r\n    }\r\n\r\n    set_username(username) {\r\n        this.username = username\r\n    }\r\n\r\n    get_username() {\r\n        return this.username;\r\n    }\r\n\r\n    get_hostnmae() {\r\n        return this.hostname;\r\n    }\r\n\r\n    get_ws_protocol() {\r\n        return this.ws_protocol;\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { loadAllMessages } from '../HelperClasses/ChatMessage';\r\nimport Menu from './Menu';\r\n\r\nexport class AnswerBox extends Component {\r\n    message_api = this.props.message_api;\r\n\r\n    state = {\r\n        isLoggedIn: true,\r\n        isNewAnswer: true,\r\n        messages: []\r\n    };\r\n\r\n    \r\n    componentDidMount() {\r\n        this.setState({\r\n            messages: this.message_api.get_answered_messages()\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.isNewAnswer) {\r\n            return (\r\n                <div id=\"answers_box\" className=\"AnswerBox\">\r\n                   \r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            this.state.isNewAnswer = false;\r\n            return (\r\n                <div className=\"AnswerBox\">\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default AnswerBox\r\n","import React, { Component } from 'react'\r\n\r\nexport class Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n                <ul>\r\n                    <li onClick={ this.props.question_layout_handler}> Questions</li>\r\n                    <li onClick={this.props.answer_layout_handler}> Answers</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu\r\n","import React, { Component } from 'react'\r\nimport { MessageWebApi } from '../HelperClasses/MessageApi';\r\nimport AnswerBox from './AnswerBox';\r\nimport QuestionBox from './QuestionBox';\r\n\r\nvar hostname = window.location.host\r\nvar ws_protocol = window.location.protocol == \"https:\" ? \"wss\" : \"ws\";\r\n// var hostname = '127.0.0.1:8000'\r\n\r\nexport class Home extends Component {\r\n    client = new WebSocket(\r\n        ws_protocol\r\n        + '://'\r\n        + hostname\r\n        + '/ws/chat/'\r\n        + this.props.roomname\r\n        + '/'\r\n    );\r\n    username = this.props.username;\r\n    roomname = this.props.roomname;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.message_api = new MessageWebApi(this.client);\r\n        this.message_api.load_messages();\r\n        this.message_api.set_username(this.username);\r\n        this.message_api.set_roomname(this.roomname);\r\n\r\n        this.question_layout_handler = this.question_layout_handler.bind(this);\r\n        this.answer_layout_handler = this.answer_layout_handler.bind(this);\r\n    }\r\n\r\n    question_layout_handler() {\r\n        this.setState({\r\n            questions_layout: true,\r\n            answer_layout:false\r\n        })\r\n    }\r\n    answer_layout_handler() {\r\n        this.setState({\r\n            questions_layout: false,\r\n            answer_layout: true\r\n        })\r\n    }\r\n\r\n    state = {\r\n        questions_layout: true,\r\n        answer_layout: false,\r\n    }\r\n\r\n    render() {\r\n        let answers_layout = this.state.answer_layout;\r\n        let questions_layout = this.state.questions_layout;\r\n\r\n        let layout;\r\n        if (answers_layout) {\r\n            layout =\r\n                <div className=\"AnswerBox\">\r\n                    <AnswerBox message_api={ this.message_api}/>\r\n                </div>\r\n        }\r\n        else if (questions_layout) {\r\n            layout =\r\n                <div className=\"QuestionViewContainer\">\r\n                <QuestionBox\r\n                    message_api={this.message_api}\r\n                    username={this.username}\r\n                    roomname={this.roomname} />\r\n                </div>\r\n        }\r\n        return (\r\n            <div className=\"Home\">\r\n                {layout}\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport Home from './Home'\r\n\r\nexport class Login extends React.Component {\r\n\r\n    state = {\r\n        isLoggedIn: false,\r\n        username: 'Shivansh',\r\n        roomname: 'chatroom'\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRoomName = this.handleRoomName.bind(this);\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.searchInput.focus();\r\n    }\r\n    handleSubmit(event) {\r\n        var username  = this.state.username;\r\n        var roomname = this.state.roomname;\r\n        if (username != \"\" && roomname != \"\") {\r\n            this.setState({\r\n                isLoggedIn: true\r\n            })\r\n        }\r\n        else {\r\n            alert(\"You can't leave any field empty\");\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    handleRoomName(event) {\r\n        this.setState({\r\n            roomname: event.target.value\r\n        });\r\n    }\r\n    handleUsername(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const isLoggedIn = this.state.isLoggedIn;\r\n        if (isLoggedIn === false) {\r\n            return (\r\n                <div className=\"RoomContainer\">\r\n                    <form className=\"RoomForm\" onSubmit={this.handleSubmit}>\r\n                        <p className='intro'>Created By Shivansh Shrivastava</p>\r\n                        <label htmlFor=\"\">Enter Username : </label>\r\n                        <input className=\"input-username\" ref={inputEl => (this.searchInput = inputEl)} type=\"text\" onChange={this.handleUsername} value={this.state.username} />\r\n\r\n                        <label htmlFor=\"\">Enter Room Name : </label>\r\n                        <input className=\"input-room-name\" type=\"text\" onChange={this.handleRoomName} value={this.state.roomname} />\r\n\r\n                        <input className='input-submit' type=\"submit\" value=\"Enter\"/>\r\n                        \r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return <Home username={this.state.username} roomname={this.state.roomname}/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\nimport QuestionBox from './components/QuestionBox'\nimport Login from './components/Login'\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Login/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}